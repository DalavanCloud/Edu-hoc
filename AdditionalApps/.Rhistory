source('~/Dokumenty/studijni_materialy/DP/code/quant_single.r')
source('~/Dokumenty/studijni_materialy/DP/code/quant.r')
source('~/Dokumenty/studijni_materialy/DP/code/quant.r')
hist(h, breaks = 50, main = "histogram of distances for non zero vectors between A and B", col = "grey")
hist(hS, breaks = 50, main = "histogram of distances for non zero vectors between AB and sniffer", col = "grey")
hist(lengths, breaks = 50, main = "histogram of lenghts of final vectors", col = "grey")
boxplot(h, hS, names=c("distances between A and B","distances between AB and Sniffer"))
lengths
source('~/Dokumenty/studijni_materialy/DP/code/quant_single.r')
plotValues(2,2,70)
plotValues(2,5,70)
plotValues(4,4,70)
plotValues(4,4,-80)
plotValues(4,4,-80)
plotValues <- function(top, down, line){
plot(c(-10:1010), y=rep_len(s1$mean, length.out = 1021), type = 'l', col = 'blue',  ylim = c(max(values1)+top, min(values1)-down),
xlab = "bits", ylab="dB")
lines(c(-10:1010), y=rep_len(s2$mean, length.out = 1021), col = 'red')
lines(c(-10:1010), y=rep_len(s3$mean, length.out = 1021), col = 'green' )
lines(c(-10:1010), y=rep_len(s1$qp, length.out = 1021), col = 'blue', lty = 3 )
lines(c(-10:1010), y=rep_len(s2$qp, length.out = 1021), col = 'red' , lty = 3)
lines(c(-10:1010), y=rep_len(s3$qp, length.out = 1021), col = 'green' , lty = 3)
lines(c(-10:1010), y=rep_len(s1$qm, length.out = 1021), col = 'blue', lty = 3 )
lines(c(-10:1010), y=rep_len(s2$qm, length.out = 1021), col = 'red' , lty = 3)
lines(c(-10:1010), y=rep_len(s3$qm, length.out = 1021), col = 'green' , lty = 3)
points(c(1:1000),type="b", y=values1, col = 'blue', lty = 2, pch=16 )
points(c(1:1000),type="b", y=values2, col = 'red' , lty = 2, pch=16)
points(c(1:1000),type="b", y=values3, col = 'green', lty = 2, pch=16)
same <- getSamePoints(x_locations, bits1, bits2)
diff <- getDiffPoints(x_locations, bits1, bits2)
other <- setdiff(setdiff(c(1:1000), same), diff)
points(other, y=rep_len(line, length.out = length(other)), col = "black", pch=20, cex=0.1)
points(na.omit(same), y=rep_len(line, length.out = length(na.omit(same))), col = "green", pch=20, cex=0.1)
points(diff, y=rep_len(line, length.out = length(diff)), col = "red", pch=20, cex=0.1)
text(-10, line, "AB", cex = 0.5)
text(-10, line-0.2, "AS", cex = 0.5)
same <- getSamePoints(x_locations, bits1, bits3)
diff <- getDiffPoints(x_locations, bits1, bits3)
other <- setdiff(setdiff(c(1:1000), same), diff)
points(other, y=rep_len(line-0.2, length.out = length(other)), col = "black", pch=20, cex=0.1)
points(na.omit(same), y=rep_len(line-0.2, length.out = length(na.omit(same))), col = "green", pch=20, cex=0.1)
points(diff, y=rep_len(line-0.2, length.out = length(diff)), col = "red", pch=20, cex=0.1)
same <- getSamePoints(x_locations, bits3, bits2)
diff <- getDiffPoints(x_locations, bits3, bits2)
other <- setdiff(setdiff(c(1:1000), same), diff)
points(other, y=rep_len(line - 0.4, length.out = length(other)), col = "black", pch=20, cex=0.1)
points(na.omit(same), y=rep_len(line - 0.4, length.out = length(na.omit(same))), col = "green", pch=20, cex=0.1)
points(diff, y=rep_len(line - 0.4, length.out = length(diff)), col = "red", pch=20, cex=0.1)
text(-10, line - 0.4, "BS", cex = 0.5)
}
plotValues(4,4,-80)
bits3
length(bits3)
length(bits2)
length(bits1)
x_locations
x_locations
length(bits3)
length(bits1)
getSamePoints <- function(locations, bitsA, bitsB){
result <- c(NA)
if(length(locations)==0){
return(na.omit(result))
}
for(i in 1:min(c(length(locations),length(bitsA), length(bitsB)){
if(bitsA[i] == bitsB[i]){
result <- c(result, locations[i])
}
}
print(result)
return(result)
}
getSamePoints <- function(locations, bitsA, bitsB){
result <- c(NA)
if(length(locations)==0){
return(na.omit(result))
}
for(i in 1:min(c(length(locations),length(bitsA), length(bitsB)))){
if(bitsA[i] == bitsB[i]){
result <- c(result, locations[i])
}
}
print(result)
return(result)
}
plotValues(4,4,-80)
getDiffPoints <- function(locations, bitsA, bitsB){
result <- c(NA)
if(length(locations)==0){
return(na.omit(result))
}
for(i in 1:min(c(length(locations),length(bitsA), length(bitsB)))){
if(bitsA[i] != bitsB[i]){
result <- c(result, locations[i])
}
}
return(na.omit(result))
}
plotValues(4,4,-80)
source('~/Dokumenty/studijni_materialy/DP/code/quant_single.r')
plotValues(4,4,-80)
source('~/Dokumenty/studijni_materialy/DP/code/quant_single.r')
plotValues(4,4,-80)
